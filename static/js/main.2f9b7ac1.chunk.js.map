{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","event","document","addEventListener","e","setState","key","removeEventListener","className","this","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,MAFX,uDAKE,WAAqB,IAAD,OAGlBC,SAASC,iBAAiB,SAAS,SAACC,GAGlC,EAAKC,SAAS,CAAEJ,MAAOG,EAAEE,WAX/B,kCAeE,WAAwB,IAAD,OAKrBJ,SAASK,oBAAoB,SAJZ,SAACH,GAChB,EAAKC,SAAS,CAAEJ,MAAOG,EAAEE,WAjB/B,oBAwBE,WAGE,OACE,qBAAKE,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIC,KAAKT,MAAMC,MAAX,mCACgCQ,KAAKT,MAAMC,MAD3C,KAEI,kCAjChB,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.2f9b7ac1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  event: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    event: null,\n  };\n\n  componentDidMount() {\n    // console.log('This is component did mount');\n\n    document.addEventListener('keyup', (e) => {\n      // console.log(e); // 'a'\n      // console.log(e.key); // 'a'\n      this.setState({ event: e.key });\n    });\n  }\n\n  componentWillUnmount() {\n    const listener = (e: KeyboardEvent) => {\n      this.setState({ event: e.key });\n    };\n\n    document.removeEventListener('keyup', listener);\n    // console.log('this is component willUnMount');\n  }\n\n  render() {\n    // console.log('this is render');\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.event\n              ? `The last pressed key is [${this.state.event}]`\n              : 'Nothing was pressed yet'\n          }\n\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}